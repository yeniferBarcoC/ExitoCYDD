// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

namespace Persistencia.Migrations
{
    [DbContext(typeof(conexion))]
    partial class conexionModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Dominio.Empleados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasenna")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sucursal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Dominio.Facturas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("EmpleadosId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadosId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("Dominio.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacturasId")
                        .HasColumnType("int");

                    b.Property<string>("FechaCompra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecioCompra")
                        .HasColumnType("float");

                    b.Property<double>("PrecioVenta")
                        .HasColumnType("float");

                    b.Property<int>("TipoProducto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacturasId");

                    b.ToTable("Productos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Producto");
                });

            modelBuilder.Entity("Dominio.ConsolasP", b =>
                {
                    b.HasBaseType("Dominio.Producto");

                    b.Property<double>("CapacidadAlmacenamiento")
                        .HasColumnType("float");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdConsolasP")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroControles")
                        .HasColumnType("int");

                    b.Property<int>("TipoAlmacenamiento")
                        .HasColumnType("int");

                    b.Property<string>("VelocidadProcesamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VelocidadRam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ConsolasP");
                });

            modelBuilder.Entity("Dominio.Controles", b =>
                {
                    b.HasBaseType("Dominio.Producto");

                    b.Property<int>("IdControles")
                        .HasColumnType("int");

                    b.Property<string>("TipoControl")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Controles");
                });

            modelBuilder.Entity("Dominio.VideoJuego", b =>
                {
                    b.HasBaseType("Dominio.Producto");

                    b.Property<bool>("EsMultiPlataforma")
                        .HasColumnType("bit");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VideoJuego_Fabricante");

                    b.Property<int>("IdVideoJuego")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VideoJuego_Nombre");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VideoJuego_Version");

                    b.HasDiscriminator().HasValue("VideoJuego");
                });

            modelBuilder.Entity("Dominio.Facturas", b =>
                {
                    b.HasOne("Dominio.Empleados", "Empleados")
                        .WithMany()
                        .HasForeignKey("EmpleadosId");

                    b.HasOne("Dominio.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId");

                    b.Navigation("Empleados");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Dominio.Producto", b =>
                {
                    b.HasOne("Dominio.Facturas", null)
                        .WithMany("ListaProductos")
                        .HasForeignKey("FacturasId");
                });

            modelBuilder.Entity("Dominio.Facturas", b =>
                {
                    b.Navigation("ListaProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
